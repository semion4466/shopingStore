{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Documents/GitHub/React-e-commerce-app/frontend/src/components/partials/CartGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useReducer, useContext } from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport CartItem from './CartItem.js';\nimport { Store } from '../../Store.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        loading: false\n      };\n    case \"FETCH_ERROR\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nfunction CartGrid() {\n  _s();\n  const {\n    state: {\n      cart\n    }\n  } = useContext(Store);\n  const ctxCart = cart.cartItems;\n  const [{\n    loading\n  }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: false,\n    error: false\n  });\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_REQUEST\"\n      });\n      const Data = await axios({\n        method: 'GET',\n        url: 'http://localhost:3001/cart'\n      }).catch(err => {\n        dispatch({\n          type: \"FETCH_ERROR\",\n          payload: err\n        });\n      });\n      setCartItems(Data.data[0].cartItems);\n      dispatch({\n        type: \"FETCH_SUCCESS\"\n      });\n    };\n    fetchData();\n  }, []);\n\n  // Card components creation:\n  const Items = cartItems.map(product => {\n    return /*#__PURE__*/_jsxDEV(MDBCol, {\n      size: \"4\",\n      sm: 4,\n      lg: 4,\n      xl: 4,\n      xxl: 4,\n      children: /*#__PURE__*/_jsxDEV(CartItem, {\n        items: product\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, product._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  });\n\n  // Seperate To Rows:\n  var final = [];\n  for (let i = 0; i < Items.length; i + 3) {\n    const slice = Items.splice(0, 3);\n    final.push( /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: \"Row\" + i,\n      children: slice\n    }, i++, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: \"mb-3\",\n      children: ctxCart.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1\",\n        children: \"Cart is Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }, this) : loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        variant: \"primary\",\n        animation: \"border\",\n        role: \"status\",\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }, this) : final\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(CartGrid, \"efZf6m/TpxXGVUBI1LHwDlf+kCs=\");\n_c = CartGrid;\n;\nexport default CartGrid;\nvar _c;\n$RefreshReg$(_c, \"CartGrid\");","map":{"version":3,"names":["React","useEffect","useState","useReducer","useContext","MDBContainer","MDBRow","MDBCol","Spinner","axios","CartItem","Store","reducer","state","action","type","loading","error","payload","CartGrid","cart","ctxCart","cartItems","dispatch","products","setCartItems","fetchData","Data","method","url","catch","err","data","Items","map","product","_id","final","i","length","slice","splice","push"],"sources":["/Users/yan/Documents/GitHub/React-e-commerce-app/frontend/src/components/partials/CartGrid.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useContext } from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport Spinner from 'react-bootstrap/Spinner';\nimport axios from 'axios';\nimport CartItem from './CartItem.js';\nimport { Store } from '../../Store.js';\n\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"FETCH_REQUEST\":\n            return { ...state, loading: true };\n        case \"FETCH_SUCCESS\":\n            return { ...state, loading: false };\n        case \"FETCH_ERROR\":\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\n\nfunction CartGrid() {\n    const { state: { cart } } = useContext(Store);\n    const ctxCart = cart.cartItems;\n    const [{ loading }, dispatch] = useReducer(reducer, {\n        products: [],\n        loading: false,\n        error: false,\n    });\n\n    const [cartItems, setCartItems] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: \"FETCH_REQUEST\" });\n            const Data = await axios({\n                method: 'GET',\n                url: 'http://localhost:3001/cart',\n            }).catch((err) => {\n                dispatch({ type: \"FETCH_ERROR\", payload: err });\n            });\n            setCartItems(Data.data[0].cartItems);\n            dispatch({ type: \"FETCH_SUCCESS\" });\n        };\n        fetchData();\n    }, []);\n\n\n    // Card components creation:\n    const Items = cartItems.map((product) => {\n        return (\n            <MDBCol key={product._id} size='4' sm={4} lg={4} xl={4} xxl={4}>\n                <CartItem key={product._id} items={product} />\n            </MDBCol>\n        )\n    });\n\n\n    // Seperate To Rows:\n    var final = [];\n    for (let i = 0; i < Items.length; i + 3) {\n        const slice = Items.splice(0, 3);\n        final.push(<MDBRow className={\"Row\" + i} key={i++}>{slice}</MDBRow>);\n    }\n\n    return (\n        <MDBContainer className='mt-3'>\n            <MDBRow className='mb-3'>\n                {ctxCart.length === 0 ? <h1 className='h1'>Cart is Empty</h1>\n                    : loading ? <Spinner variant='primary' animation='border' role=\"status\" className='loading'>\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner> : final}\n            </MDBRow>\n        </MDBContainer>\n    );\n};\n\nexport default CartGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}