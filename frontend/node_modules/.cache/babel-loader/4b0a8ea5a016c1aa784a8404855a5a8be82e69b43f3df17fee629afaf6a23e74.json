{"ast":null,"code":"var _jsxFileName = \"/Users/yan/Documents/GitHub/React-e-commerce-app/frontend/src/components/partials/Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useReducer, useContext } from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport axios from 'axios';\nimport Card from '../partials/Card.js';\nimport { Store } from '../../Store.js';\nimport Spinner from 'react-bootstrap/Spinner';\nimport CardModal from '../partials/CardModal.js';\n\n// Reducer:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        products: action.payload\n      };\n    case \"FETCH_ERROR\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nfunction Grid() {\n  _s();\n  const [bottomModal, setBottomModal] = useState(false);\n  const [{\n    loading\n  }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: false,\n    error: false\n  });\n  const [productsNew, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_REQUEST\"\n      });\n      const {\n        data\n      } = await axios({\n        method: 'GET',\n        url: 'http://localhost:3001/data'\n      }).catch(err => {\n        dispatch({\n          type: \"FETCH_ERROR\",\n          payload: err\n        });\n      });\n      dispatch({\n        type: \"FETCH_SUCCESS\",\n        payload: data\n      });\n      setProducts(data);\n    };\n    fetchData();\n  }, []);\n\n  // sort the products by price:\n  productsNew.sort((a, b) => a.price - b.price);\n  const [Cart, setCart] = useState([]);\n  const {\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const onClickHandler = item => {\n    setCart([...Cart, item]);\n    axios({\n      method: 'POST',\n      url: 'http://localhost:3001/add-to-cart',\n      data: {\n        product: item\n      }\n    });\n    ctxDispatch({\n      type: 'ADD_TO_CART',\n      payload: {\n        product: item,\n        price: item.price\n      }\n    });\n    setBottomModal(true);\n  };\n\n  // Card components creation:\n  const Items = productsNew.map(product => {\n    return /*#__PURE__*/_jsxDEV(MDBCol, {\n      size: \"4\",\n      sm: 4,\n      lg: 4,\n      xl: 4,\n      xxl: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        items: product,\n        handleClick: onClickHandler\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, product._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  });\n\n  // Seperate To Rows:\n  var final = [];\n  for (let i = 0; i < Items.length; i + 3) {\n    const slice = Items.splice(0, 3);\n    final.push( /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: \"Row\" + i,\n      children: slice\n    }, i++, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 20\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CardModal, {\n      bottomModal: bottomModal,\n      toggleModal: setBottomModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"mb-3\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          variant: \"primary\",\n          className: \"loading\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 32\n        }, this) : final\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Grid, \"6TFgMP/VzedfEhUnEy/wMLHzGFw=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useEffect","useState","useReducer","useContext","MDBContainer","MDBRow","MDBCol","axios","Card","Store","Spinner","CardModal","reducer","state","action","type","loading","products","payload","error","Grid","bottomModal","setBottomModal","dispatch","productsNew","setProducts","fetchData","data","method","url","catch","err","sort","a","b","price","Cart","setCart","ctxDispatch","onClickHandler","item","product","Items","map","_id","final","i","length","slice","splice","push"],"sources":["/Users/yan/Documents/GitHub/React-e-commerce-app/frontend/src/components/partials/Grid.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useContext } from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\nimport axios from 'axios';\nimport Card from '../partials/Card.js';\nimport { Store } from '../../Store.js';\nimport Spinner from 'react-bootstrap/Spinner';\nimport CardModal from '../partials/CardModal.js';\n\n// Reducer:\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"FETCH_REQUEST\":\n            return { ...state, loading: true };\n        case \"FETCH_SUCCESS\":\n            return { ...state, loading: false, products: action.payload };\n        case \"FETCH_ERROR\":\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\n\nfunction Grid() {\n    const [bottomModal, setBottomModal] = useState(false);\n\n\n    const [{ loading }, dispatch] = useReducer(reducer, {\n        products: [],\n        loading: false,\n        error: false,\n    });\n\n\n    const [productsNew, setProducts] = useState([]);\n    useEffect(() => {\n        const fetchData = async () => {\n            dispatch({ type: \"FETCH_REQUEST\" });\n            const { data } = await axios({\n                method: 'GET',\n                url: 'http://localhost:3001/data',\n            }).catch((err) => {\n                dispatch({ type: \"FETCH_ERROR\", payload: err });\n            });\n            dispatch({ type: \"FETCH_SUCCESS\", payload: data });\n            setProducts(data);\n        };\n        fetchData();\n    }, []);\n\n\n    // sort the products by price:\n    productsNew.sort((a, b) => a.price - b.price);\n    const [Cart, setCart] = useState([]);\n\n\n    const { dispatch: ctxDispatch } = useContext(Store);\n    const onClickHandler = (item) => {\n        setCart([...Cart, item]);\n        axios({\n            method: 'POST',\n            url: 'http://localhost:3001/add-to-cart',\n            data: {\n                product: item\n            }\n        })\n        ctxDispatch({\n            type: 'ADD_TO_CART', payload: {\n                product: item,\n                price: item.price\n            }\n        });\n        setBottomModal(true);\n    };\n\n\n\n    // Card components creation:\n    const Items = productsNew.map((product) => {\n        return (\n            <MDBCol key={product._id} size='4' sm={4} lg={4} xl={4} xxl={4}>\n                <Card key={product._id} items={product} handleClick={onClickHandler} />\n            </MDBCol>\n        )\n    });\n\n    // Seperate To Rows:\n    var final = [];\n    for (let i = 0; i < Items.length; i + 3) {\n        const slice = Items.splice(0, 3);\n        final.push(<MDBRow className={\"Row\" + i} key={i++}>{slice}</MDBRow>);\n    }\n\n    return (\n        <>\n            <CardModal bottomModal={bottomModal} toggleModal={setBottomModal} />\n            <MDBContainer className='mt-3'>\n                <MDBRow className='mb-3'>\n                    {loading ? <Spinner variant='primary' className='loading'>\n                        <span className='visually-hidden'>Loading...</span>\n                    </Spinner> : final}\n                </MDBRow>\n            </MDBContainer>\n        </>\n    );\n}\n\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}